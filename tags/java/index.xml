<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Mustafa Bayar</title><link>https://mustafabayar.github.io/tags/java/</link><description>Recent content in Java on Mustafa Bayar</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 08 Sep 2018 08:06:25 +0600</lastBuildDate><atom:link href="https://mustafabayar.github.io/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Dynamic Task Scheduling with Spring</title><link>https://mustafabayar.github.io/posts/dynamic-scheduling-spring/</link><pubDate>Sat, 08 Sep 2018 08:06:25 +0600</pubDate><guid>https://mustafabayar.github.io/posts/dynamic-scheduling-spring/</guid><description>Summary Spring makes it very easy to schedule a job to run periodically. All we need to do is to put @Scheduled annotation above the method and provide the necessary parameters such as fixedRate or cron expression. But when it comes to change this fixedRate on the fly, @Scheduled annotation is not enough. Ultimately, what I wanted to do was periodically load my configuration table from a database. But the fixedRate which indicates how frequently I will load this table is also stored in the very same database.</description></item></channel></rss>